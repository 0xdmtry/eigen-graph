{
	"info": {
		"_postman_id": "0bc22ef3-3ebd-43cb-867d-b7c130925a4f",
		"name": "eigen-graph",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7700049",
		"_collection_link": "https://bckp33.postman.co/workspace/str~69fa7503-6cae-448c-a22e-06876a002add/collection/7700049-0bc22ef3-3ebd-43cb-867d-b7c130925a4f?action=share&source=collection_link&creator=7700049"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "be",
					"item": [
						{
							"name": "ping_be",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8000/v1/ping",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"v1",
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "operators_snapshot",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8000/v1/operators/snapshot",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"v1",
										"operators",
										"snapshot"
									]
								}
							},
							"response": []
						},
						{
							"name": "operators_snapshot_cached",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8000/v1/operators/snapshot_cached",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"v1",
										"operators",
										"snapshot_cached"
									]
								}
							},
							"response": []
						},
						{
							"name": "operators_aggregator",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8000/v1/operators/aggregates",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"v1",
										"operators",
										"aggregates"
									]
								}
							},
							"response": []
						},
						{
							"name": "operators_aggregator_cached",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8000/v1/operators/aggregates_cached",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"v1",
										"operators",
										"aggregates_cached"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "stream",
					"item": [
						{
							"name": "ping_stream",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8001/v1/ping",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8001",
									"path": [
										"v1",
										"ping"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "subgraph",
			"item": [
				{
					"name": "operators_snapshot",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"query OperatorsSnapshot($first: Int!, $skip: Int!, $orderBy: Operator_orderBy!, $orderDirection: OrderDirection!, $hasSlashing: Int) { operators(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDirection, where: { slashingCount_gte: $hasSlashing }) { id avsCount strategyCount slashingCount slashings(first: 1, orderBy: blockTimestamp, orderDirection: desc) { blockTimestamp } strategies(first: 100, orderBy: lastUpdateBlockTimestamp, orderDirection: desc) { totalShares strategy { id exchangeRate token { id symbol decimals } } } lastUpdateBlockTimestamp } }\",\n  \"variables\": {\n    \"first\": 25,\n    \"skip\": 0,\n    \"orderBy\": \"lastUpdateBlockTimestamp\",\n    \"orderDirection\": \"desc\",\n    \"hasSlashing\": 0\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://subgraph.satsuma-prod.com/027e731a6242/eigenlabs/eigen-graph-mainnet/api",
							"protocol": "https",
							"host": [
								"subgraph",
								"satsuma-prod",
								"com"
							],
							"path": [
								"027e731a6242",
								"eigenlabs",
								"eigen-graph-mainnet",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "deposit",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"query DepositsBySymbol($first: Int!, $skip: Int!, $since: BigInt!, $symbol: String!) { deposits(first: $first, skip: $skip, orderBy: blockTimestamp, orderDirection: desc, where: { blockTimestamp_gte: $since, token_: { symbol_contains_nocase: $symbol } }) { id token { id symbol } staker { id } strategy { id } shares blockNumber blockTimestamp transactionHash } }\",\n  \"variables\": {\n    \"first\": 50,\n    \"skip\": 0,\n    \"since\": \"0\",\n    \"symbol\": \"EIGEN\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://subgraph.satsuma-prod.com/027e731a6242/eigenlabs/eigen-graph-mainnet/api",
							"protocol": "https",
							"host": [
								"subgraph",
								"satsuma-prod",
								"com"
							],
							"path": [
								"027e731a6242",
								"eigenlabs",
								"eigen-graph-mainnet",
								"api"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}